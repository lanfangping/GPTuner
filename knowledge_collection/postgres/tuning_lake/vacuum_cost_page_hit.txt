I suggest adjusting the 'vacuum_cost_page_hit' knob in Postgres to balance the I/O impact of vacuuming. This knob is the estimated cost for vacuuming a buffer found in the shared buffer cache, which involves the process of locking the buffer pool, looking up the shared hash table, and scanning the page content. It has a default value of one. Increasing its value will make the vacuum process slower but less resource-intensive, while decreasing it will speed up vacuuming at the cost of higher I/O impact.